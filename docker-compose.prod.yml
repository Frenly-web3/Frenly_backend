version: "3.8"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "https://${LOKI_USR}:${LOKI_PSW}@loki.unistory.app/loki/api/v1/push"
      loki-external-labels: "type=prod,repo=${COMPOSE_PROJECT_NAME},job=docker,container_name={{.Name}}"

services:
  backend:
    <<: *logging
    image: ${REGISTRY_HOST_REMOTE}/${GIT_REPO_NAME}.${BRANCH_NAME}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.routers.backend.tls=true"
    networks:
      - default
      - pg_db

  pg_db:
    <<: *logging
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - pg_db
      - pgadmin

  pgadmin:
    <<: *logging
    image: dpage/pgadmin4
    environment:
      - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_USR}"
      - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PSW}"
      - "SCRIPT_NAME=/pgadmin"
      # Deals with CSRF cookie error, because of Cloudflare caching
      - "PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=False"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.rule=Host(`${DOMAIN}`) && PathPrefix(`/pgadmin`)"
      - "traefik.http.routers.pgadmin.tls.certresolver=le"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.middlewares.pgadmin-subfolder.headers.customrequestheaders.X-Script-Name=/pgadmin"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - default
      - pgadmin

volumes:
  pgdata:
  pgadmin:

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}
  pg_db:
  pgadmin:
